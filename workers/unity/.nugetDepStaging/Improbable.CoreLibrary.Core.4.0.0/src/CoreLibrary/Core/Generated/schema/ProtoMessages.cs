//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: improbable/corelib/entity/nature/nature_data.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Entity.Nature
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"NatureDataData")]
  public partial class NatureDataData : global::ProtoBuf.IExtensible
  {
    public NatureDataData() {}
    
    private readonly global::System.Collections.Generic.List<string> _natures = new global::System.Collections.Generic.List<string>();
    [global::ProtoBuf.ProtoMember(1, Name=@"natures", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<string> Natures
    {
      get { return _natures; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/entity/prefab.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Entity
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"PrefabData")]
  public partial class PrefabData : global::ProtoBuf.IExtensible
  {
    public PrefabData() {}
    

    private string _name;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"name", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string Name
    {
      get { return _name?? ""; }
      set { _name = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool NameSpecified
    {
      get { return _name != null; }
      set { if (value == (_name== null)) _name = value ? Name : (string)null; }
    }
    private bool ShouldSerializeName() { return NameSpecified; }
    private void ResetName() { NameSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/tags_data.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TagsDataData")]
  public partial class TagsDataData : global::ProtoBuf.IExtensible
  {
    public TagsDataData() {}
    
    private readonly global::System.Collections.Generic.List<string> _tags = new global::System.Collections.Generic.List<string>();
    [global::ProtoBuf.ProtoMember(1, Name=@"tags", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<string> Tags
    {
      get { return _tags; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}