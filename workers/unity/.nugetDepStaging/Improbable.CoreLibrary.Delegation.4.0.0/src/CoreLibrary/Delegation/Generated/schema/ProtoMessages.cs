//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: improbable/corelib/physical/physicality.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"PhysicalityData")]
  public partial class PhysicalityData : global::ProtoBuf.IExtensible
  {
    public PhysicalityData() {}
    

    private bool? _isPhysical;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"is_physical", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool IsPhysical
    {
      get { return _isPhysical?? default(bool); }
      set { _isPhysical = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool IsPhysicalSpecified
    {
      get { return _isPhysical != null; }
      set { if (value == (_isPhysical== null)) _isPhysical = value ? IsPhysical : (bool?)null; }
    }
    private bool ShouldSerializeIsPhysical() { return IsPhysicalSpecified; }
    private void ResetIsPhysical() { IsPhysicalSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/util/entity_owner.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Util
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"EntityOwnerData")]
  public partial class EntityOwnerData : global::ProtoBuf.IExtensible
  {
    public EntityOwnerData() {}
    

    private string _ownerId;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"owner_id", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string OwnerId
    {
      get { return _ownerId?? ""; }
      set { _ownerId = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool OwnerIdSpecified
    {
      get { return _ownerId != null; }
      set { if (value == (_ownerId== null)) _ownerId = value ? OwnerId : (string)null; }
    }
    private bool ShouldSerializeOwnerId() { return OwnerIdSpecified; }
    private void ResetOwnerId() { OwnerIdSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/visual/visuality.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Visual
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"VisualityData")]
  public partial class VisualityData : global::ProtoBuf.IExtensible
  {
    public VisualityData() {}
    

    private bool? _isVisual;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"is_visual", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool IsVisual
    {
      get { return _isVisual?? default(bool); }
      set { _isVisual = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool IsVisualSpecified
    {
      get { return _isVisual != null; }
      set { if (value == (_isVisual== null)) _isVisual = value ? IsVisual : (bool?)null; }
    }
    private bool ShouldSerializeIsVisual() { return IsVisualSpecified; }
    private void ResetIsVisual() { IsVisualSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/physics_simulation.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"PhysicsSimulationData")]
  public partial class PhysicsSimulationData : global::ProtoBuf.IExtensible
  {
    public PhysicsSimulationData() {}
    

    private Schema.Improbable.Entity.Physical.PhysicsSimulationData.PhysicsStrategy? _strategy;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"strategy", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public Schema.Improbable.Entity.Physical.PhysicsSimulationData.PhysicsStrategy Strategy
    {
      get { return _strategy?? Schema.Improbable.Entity.Physical.PhysicsSimulationData.PhysicsStrategy.Simulated; }
      set { _strategy = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool StrategySpecified
    {
      get { return _strategy != null; }
      set { if (value == (_strategy== null)) _strategy = value ? Strategy : (Schema.Improbable.Entity.Physical.PhysicsSimulationData.PhysicsStrategy?)null; }
    }
    private bool ShouldSerializeStrategy() { return StrategySpecified; }
    private void ResetStrategy() { StrategySpecified = false; }
    

    private string _ownerId;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"owner_id", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string OwnerId
    {
      get { return _ownerId?? ""; }
      set { _ownerId = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool OwnerIdSpecified
    {
      get { return _ownerId != null; }
      set { if (value == (_ownerId== null)) _ownerId = value ? OwnerId : (string)null; }
    }
    private bool ShouldSerializeOwnerId() { return OwnerIdSpecified; }
    private void ResetOwnerId() { OwnerIdSpecified = false; }
    
    [global::ProtoBuf.ProtoContract(Name=@"PhysicsStrategy")]
    public enum PhysicsStrategy
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"Simulated", Value=0)]
      Simulated = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Exists", Value=1)]
      Exists = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"None", Value=2)]
      None = 2
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}