//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: improbable/corelib/math/relative_transform.proto
// Note: requires additional types generated from: improbable/math/vector3f.proto
// Note: requires additional types generated from: improbable/corelib/math/quaternion.proto
namespace Schema.Improbable.Corelib.Math
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"RelativeTransform")]
  public partial class RelativeTransform : global::ProtoBuf.IExtensible
  {
    public RelativeTransform() {}
    

    private Schema.Improbable.Math.Vector3f _position = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"position", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3f Position
    {
      get { return _position; }
      set { _position = value; }
    }

    private Schema.Improbable.Corelib.Math.Quaternion _rotation = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"rotation", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Corelib.Math.Quaternion Rotation
    {
      get { return _rotation; }
      set { _rotation = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/metrics/client_physics_latency.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Metrics
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ClientPhysicsPingSent")]
  public partial class ClientPhysicsPingSent : global::ProtoBuf.IExtensible
  {
    public ClientPhysicsPingSent() {}
    

    private int? _timestampMillis;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"timestamp_millis", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int TimestampMillis
    {
      get { return _timestampMillis?? default(int); }
      set { _timestampMillis = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool TimestampMillisSpecified
    {
      get { return _timestampMillis != null; }
      set { if (value == (_timestampMillis== null)) _timestampMillis = value ? TimestampMillis : (int?)null; }
    }
    private bool ShouldSerializeTimestampMillis() { return TimestampMillisSpecified; }
    private void ResetTimestampMillis() { TimestampMillisSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ClientPhysicsLatencyData")]
  public partial class ClientPhysicsLatencyData : global::ProtoBuf.IExtensible
  {
    public ClientPhysicsLatencyData() {}
    

    private int? _roundTripMillis;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"round_trip_millis", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int RoundTripMillis
    {
      get { return _roundTripMillis?? default(int); }
      set { _roundTripMillis = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool RoundTripMillisSpecified
    {
      get { return _roundTripMillis != null; }
      set { if (value == (_roundTripMillis== null)) _roundTripMillis = value ? RoundTripMillis : (int?)null; }
    }
    private bool ShouldSerializeRoundTripMillis() { return RoundTripMillisSpecified; }
    private void ResetRoundTripMillis() { RoundTripMillisSpecified = false; }
    

    private int? _refreshPeriodMillis;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"refresh_period_millis", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int RefreshPeriodMillis
    {
      get { return _refreshPeriodMillis?? default(int); }
      set { _refreshPeriodMillis = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool RefreshPeriodMillisSpecified
    {
      get { return _refreshPeriodMillis != null; }
      set { if (value == (_refreshPeriodMillis== null)) _refreshPeriodMillis = value ? RefreshPeriodMillis : (int?)null; }
    }
    private bool ShouldSerializeRefreshPeriodMillis() { return RefreshPeriodMillisSpecified; }
    private void ResetRefreshPeriodMillis() { RefreshPeriodMillisSpecified = false; }
    
    private readonly global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.ClientPhysicsPingSent> _clientPhysicsPingSent = new global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.ClientPhysicsPingSent>();
    [global::ProtoBuf.ProtoMember(1000, Name=@"client_physics_ping_sent", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.ClientPhysicsPingSent> ClientPhysicsPingSent
    {
      get { return _clientPhysicsPingSent; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/metrics/client_physics_latency_reply.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Metrics
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ClientPhysicsPingReceived")]
  public partial class ClientPhysicsPingReceived : global::ProtoBuf.IExtensible
  {
    public ClientPhysicsPingReceived() {}
    

    private int? _receivedPingTimestampMillis;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"received_ping_timestamp_millis", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int ReceivedPingTimestampMillis
    {
      get { return _receivedPingTimestampMillis?? default(int); }
      set { _receivedPingTimestampMillis = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool ReceivedPingTimestampMillisSpecified
    {
      get { return _receivedPingTimestampMillis != null; }
      set { if (value == (_receivedPingTimestampMillis== null)) _receivedPingTimestampMillis = value ? ReceivedPingTimestampMillis : (int?)null; }
    }
    private bool ShouldSerializeReceivedPingTimestampMillis() { return ReceivedPingTimestampMillisSpecified; }
    private void ResetReceivedPingTimestampMillis() { ReceivedPingTimestampMillisSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ClientPhysicsLatencyReplyData")]
  public partial class ClientPhysicsLatencyReplyData : global::ProtoBuf.IExtensible
  {
    public ClientPhysicsLatencyReplyData() {}
    
    private readonly global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.ClientPhysicsPingReceived> _clientPhysicsPingReceived = new global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.ClientPhysicsPingReceived>();
    [global::ProtoBuf.ProtoMember(1000, Name=@"client_physics_ping_received", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.ClientPhysicsPingReceived> ClientPhysicsPingReceived
    {
      get { return _clientPhysicsPingReceived; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/metrics/engine_latency.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Metrics
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"EnginePingSent")]
  public partial class EnginePingSent : global::ProtoBuf.IExtensible
  {
    public EnginePingSent() {}
    

    private int? _timestampMillis;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"timestamp_millis", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int TimestampMillis
    {
      get { return _timestampMillis?? default(int); }
      set { _timestampMillis = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool TimestampMillisSpecified
    {
      get { return _timestampMillis != null; }
      set { if (value == (_timestampMillis== null)) _timestampMillis = value ? TimestampMillis : (int?)null; }
    }
    private bool ShouldSerializeTimestampMillis() { return TimestampMillisSpecified; }
    private void ResetTimestampMillis() { TimestampMillisSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"EngineLatencyData")]
  public partial class EngineLatencyData : global::ProtoBuf.IExtensible
  {
    public EngineLatencyData() {}
    

    private int? _roundTripMillis;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"round_trip_millis", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int RoundTripMillis
    {
      get { return _roundTripMillis?? default(int); }
      set { _roundTripMillis = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool RoundTripMillisSpecified
    {
      get { return _roundTripMillis != null; }
      set { if (value == (_roundTripMillis== null)) _roundTripMillis = value ? RoundTripMillis : (int?)null; }
    }
    private bool ShouldSerializeRoundTripMillis() { return RoundTripMillisSpecified; }
    private void ResetRoundTripMillis() { RoundTripMillisSpecified = false; }
    

    private int? _refreshPeriodMillis;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"refresh_period_millis", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int RefreshPeriodMillis
    {
      get { return _refreshPeriodMillis?? default(int); }
      set { _refreshPeriodMillis = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool RefreshPeriodMillisSpecified
    {
      get { return _refreshPeriodMillis != null; }
      set { if (value == (_refreshPeriodMillis== null)) _refreshPeriodMillis = value ? RefreshPeriodMillis : (int?)null; }
    }
    private bool ShouldSerializeRefreshPeriodMillis() { return RefreshPeriodMillisSpecified; }
    private void ResetRefreshPeriodMillis() { RefreshPeriodMillisSpecified = false; }
    
    private readonly global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.EnginePingSent> _enginePingSent = new global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.EnginePingSent>();
    [global::ProtoBuf.ProtoMember(1000, Name=@"engine_ping_sent", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.EnginePingSent> EnginePingSent
    {
      get { return _enginePingSent; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/metrics/engine_latency_reply.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Metrics
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"EnginePingReceived")]
  public partial class EnginePingReceived : global::ProtoBuf.IExtensible
  {
    public EnginePingReceived() {}
    

    private int? _receivedPingTimestampMillis;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"received_ping_timestamp_millis", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int ReceivedPingTimestampMillis
    {
      get { return _receivedPingTimestampMillis?? default(int); }
      set { _receivedPingTimestampMillis = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool ReceivedPingTimestampMillisSpecified
    {
      get { return _receivedPingTimestampMillis != null; }
      set { if (value == (_receivedPingTimestampMillis== null)) _receivedPingTimestampMillis = value ? ReceivedPingTimestampMillis : (int?)null; }
    }
    private bool ShouldSerializeReceivedPingTimestampMillis() { return ReceivedPingTimestampMillisSpecified; }
    private void ResetReceivedPingTimestampMillis() { ReceivedPingTimestampMillisSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"EngineLatencyReplyData")]
  public partial class EngineLatencyReplyData : global::ProtoBuf.IExtensible
  {
    public EngineLatencyReplyData() {}
    
    private readonly global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.EnginePingReceived> _enginePingReceived = new global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.EnginePingReceived>();
    [global::ProtoBuf.ProtoMember(1000, Name=@"engine_ping_received", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Schema.Improbable.Corelib.Metrics.EnginePingReceived> EnginePingReceived
    {
      get { return _enginePingReceived; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/physical/grounded.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"GroundedData")]
  public partial class GroundedData : global::ProtoBuf.IExtensible
  {
    public GroundedData() {}
    

    private long? _groundEntityId;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"ground_entity_id", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public long GroundEntityId
    {
      get { return _groundEntityId?? default(long); }
      set { _groundEntityId = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool GroundEntityIdSpecified
    {
      get { return _groundEntityId != null; }
      set { if (value == (_groundEntityId== null)) _groundEntityId = value ? GroundEntityId : (long?)null; }
    }
    private bool ShouldSerializeGroundEntityId() { return GroundEntityIdSpecified; }
    private void ResetGroundEntityId() { GroundEntityIdSpecified = false; }
    

    private bool? _isGrounded;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"is_grounded", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool IsGrounded
    {
      get { return _isGrounded?? default(bool); }
      set { _isGrounded = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool IsGroundedSpecified
    {
      get { return _isGrounded != null; }
      set { if (value == (_isGrounded== null)) _isGrounded = value ? IsGrounded : (bool?)null; }
    }
    private bool ShouldSerializeIsGrounded() { return IsGroundedSpecified; }
    private void ResetIsGrounded() { IsGroundedSpecified = false; }
    

    private float? _maximumInclineDegrees;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"maximum_incline_degrees", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float MaximumInclineDegrees
    {
      get { return _maximumInclineDegrees?? default(float); }
      set { _maximumInclineDegrees = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool MaximumInclineDegreesSpecified
    {
      get { return _maximumInclineDegrees != null; }
      set { if (value == (_maximumInclineDegrees== null)) _maximumInclineDegrees = value ? MaximumInclineDegrees : (float?)null; }
    }
    private bool ShouldSerializeMaximumInclineDegrees() { return MaximumInclineDegreesSpecified; }
    private void ResetMaximumInclineDegrees() { MaximumInclineDegreesSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/player/player_status.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Player
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"PlayerStatusData")]
  public partial class PlayerStatusData : global::ProtoBuf.IExtensible
  {
    public PlayerStatusData() {}
    

    private bool? _isConnected;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"is_connected", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool IsConnected
    {
      get { return _isConnected?? default(bool); }
      set { _isConnected = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool IsConnectedSpecified
    {
      get { return _isConnected != null; }
      set { if (value == (_isConnected== null)) _isConnected = value ? IsConnected : (bool?)null; }
    }
    private bool ShouldSerializeIsConnected() { return IsConnectedSpecified; }
    private void ResetIsConnected() { IsConnectedSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/slots/available_slots.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Slots
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"AvailableSlotsData")]
  public partial class AvailableSlotsData : global::ProtoBuf.IExtensible
  {
    public AvailableSlotsData() {}
    
    private readonly global::System.Collections.Generic.List<string> _slots = new global::System.Collections.Generic.List<string>();
    [global::ProtoBuf.ProtoMember(1, Name=@"slots", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<string> Slots
    {
      get { return _slots; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/slots/dynamic_slots.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/corelib/math/relative_transform.proto
namespace Schema.Improbable.Corelib.Slots
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"DynamicSlotsData")]
  public partial class DynamicSlotsData : global::ProtoBuf.IExtensible
  {
    public DynamicSlotsData() {}
    
    private readonly global::System.Collections.Generic.List<Schema.Improbable.Corelib.Slots.DynamicSlotsData.SlotsEntry> _slots = new global::System.Collections.Generic.List<Schema.Improbable.Corelib.Slots.DynamicSlotsData.SlotsEntry>();
    [global::ProtoBuf.ProtoMember(1, Name=@"slots", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Schema.Improbable.Corelib.Slots.DynamicSlotsData.SlotsEntry> Slots
    {
      get { return _slots; }
    }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"SlotsEntry")]
  public partial class SlotsEntry : global::ProtoBuf.IExtensible
  {
    public SlotsEntry() {}
    

    private string _key;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"key", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string Key
    {
      get { return _key?? ""; }
      set { _key = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool KeySpecified
    {
      get { return _key != null; }
      set { if (value == (_key== null)) _key = value ? Key : (string)null; }
    }
    private bool ShouldSerializeKey() { return KeySpecified; }
    private void ResetKey() { KeySpecified = false; }
    

    private Schema.Improbable.Corelib.Math.RelativeTransform _value = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"value", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Corelib.Math.RelativeTransform Value
    {
      get { return _value; }
      set { _value = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/slots/following_offset.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/math/vector3d.proto
namespace Schema.Improbable.Corelib.Slots
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"FollowingOffsetData")]
  public partial class FollowingOffsetData : global::ProtoBuf.IExtensible
  {
    public FollowingOffsetData() {}
    

    private Schema.Improbable.Math.Vector3d _offset = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"offset", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Offset
    {
      get { return _offset; }
      set { _offset = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/slots/hierarchy_node.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Slots
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"HierarchyNodeData")]
  public partial class HierarchyNodeData : global::ProtoBuf.IExtensible
  {
    public HierarchyNodeData() {}
    

    private long? _parent;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"parent", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public long Parent
    {
      get { return _parent?? default(long); }
      set { _parent = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool ParentSpecified
    {
      get { return _parent != null; }
      set { if (value == (_parent== null)) _parent = value ? Parent : (long?)null; }
    }
    private bool ShouldSerializeParent() { return ParentSpecified; }
    private void ResetParent() { ParentSpecified = false; }
    
    private readonly global::System.Collections.Generic.List<long> _children = new global::System.Collections.Generic.List<long>();
    [global::ProtoBuf.ProtoMember(2, Name=@"children", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<long> Children
    {
      get { return _children; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/slots/slots.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Slots
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"SlotsData")]
  public partial class SlotsData : global::ProtoBuf.IExtensible
  {
    public SlotsData() {}
    
    private readonly global::System.Collections.Generic.List<Schema.Improbable.Corelib.Slots.SlotsData.SlotToEntityIdEntry> _slotToEntityId = new global::System.Collections.Generic.List<Schema.Improbable.Corelib.Slots.SlotsData.SlotToEntityIdEntry>();
    [global::ProtoBuf.ProtoMember(1, Name=@"slot_to_entity_id", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Schema.Improbable.Corelib.Slots.SlotsData.SlotToEntityIdEntry> SlotToEntityId
    {
      get { return _slotToEntityId; }
    }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"SlotToEntityIdEntry")]
  public partial class SlotToEntityIdEntry : global::ProtoBuf.IExtensible
  {
    public SlotToEntityIdEntry() {}
    

    private string _key;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"key", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string Key
    {
      get { return _key?? ""; }
      set { _key = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool KeySpecified
    {
      get { return _key != null; }
      set { if (value == (_key== null)) _key = value ? Key : (string)null; }
    }
    private bool ShouldSerializeKey() { return KeySpecified; }
    private void ResetKey() { KeySpecified = false; }
    

    private long? _value;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"value", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public long Value
    {
      get { return _value?? default(long); }
      set { _value = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool ValueSpecified
    {
      get { return _value != null; }
      set { if (value == (_value== null)) _value = value ? Value : (long?)null; }
    }
    private bool ShouldSerializeValue() { return ValueSpecified; }
    private void ResetValue() { ValueSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelib/slots/visualized_slots.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Corelib.Slots
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"VisualizedSlotsData")]
  public partial class VisualizedSlotsData : global::ProtoBuf.IExtensible
  {
    public VisualizedSlotsData() {}
    
    private readonly global::System.Collections.Generic.List<string> _slots = new global::System.Collections.Generic.List<string>();
    [global::ProtoBuf.ProtoMember(1, Name=@"slots", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<string> Slots
    {
      get { return _slots; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/corelibrary/physical/transform.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/corelib/math/quaternion.proto
// Note: requires additional types generated from: improbable/math/coordinates.proto
namespace Schema.Improbable.Corelibrary.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TransformData")]
  public partial class TransformData : global::ProtoBuf.IExtensible
  {
    public TransformData() {}
    

    private float? _timestamp;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"timestamp", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float Timestamp
    {
      get { return _timestamp?? default(float); }
      set { _timestamp = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool TimestampSpecified
    {
      get { return _timestamp != null; }
      set { if (value == (_timestamp== null)) _timestamp = value ? Timestamp : (float?)null; }
    }
    private bool ShouldSerializeTimestamp() { return TimestampSpecified; }
    private void ResetTimestamp() { TimestampSpecified = false; }
    

    private Schema.Improbable.Math.Coordinates _position = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"position", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Coordinates Position
    {
      get { return _position; }
      set { _position = value; }
    }

    private Schema.Improbable.Corelib.Math.Quaternion _rotation = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"rotation", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Corelib.Math.Quaternion Rotation
    {
      get { return _rotation; }
      set { _rotation = value; }
    }

    private Schema.Improbable.Math.Coordinates _pivot = null;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"pivot", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Coordinates Pivot
    {
      get { return _pivot; }
      set { _pivot = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/collision_state.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/math/coordinates.proto
// Note: requires additional types generated from: improbable/math/vector3d.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Collision")]
  public partial class Collision : global::ProtoBuf.IExtensible
  {
    public Collision() {}
    

    private long? _entityHit;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"entity_hit", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public long EntityHit
    {
      get { return _entityHit?? default(long); }
      set { _entityHit = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool EntityHitSpecified
    {
      get { return _entityHit != null; }
      set { if (value == (_entityHit== null)) _entityHit = value ? EntityHit : (long?)null; }
    }
    private bool ShouldSerializeEntityHit() { return EntityHitSpecified; }
    private void ResetEntityHit() { EntityHitSpecified = false; }
    

    private Schema.Improbable.Math.Coordinates _point = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"point", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Coordinates Point
    {
      get { return _point; }
      set { _point = value; }
    }

    private Schema.Improbable.Math.Vector3d _normal = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"normal", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Normal
    {
      get { return _normal; }
      set { _normal = value; }
    }

    private Schema.Improbable.Math.Vector3d _relativeVelocity = null;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"relative_velocity", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d RelativeVelocity
    {
      get { return _relativeVelocity; }
      set { _relativeVelocity = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"CollisionStateData")]
  public partial class CollisionStateData : global::ProtoBuf.IExtensible
  {
    public CollisionStateData() {}
    
    private readonly global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.Collision> _collision = new global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.Collision>();
    [global::ProtoBuf.ProtoMember(1000, Name=@"collision", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.Collision> Collision
    {
      get { return _collision; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/freeze_constraints.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"FreezeConstraints")]
  public partial class FreezeConstraints : global::ProtoBuf.IExtensible
  {
    public FreezeConstraints() {}
    

    private bool? _x;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"x", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool X
    {
      get { return _x?? default(bool); }
      set { _x = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool XSpecified
    {
      get { return _x != null; }
      set { if (value == (_x== null)) _x = value ? X : (bool?)null; }
    }
    private bool ShouldSerializeX() { return XSpecified; }
    private void ResetX() { XSpecified = false; }
    

    private bool? _y;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"y", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool Y
    {
      get { return _y?? default(bool); }
      set { _y = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool YSpecified
    {
      get { return _y != null; }
      set { if (value == (_y== null)) _y = value ? Y : (bool?)null; }
    }
    private bool ShouldSerializeY() { return YSpecified; }
    private void ResetY() { YSpecified = false; }
    

    private bool? _z;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"z", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool Z
    {
      get { return _z?? default(bool); }
      set { _z = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool ZSpecified
    {
      get { return _z != null; }
      set { if (value == (_z== null)) _z = value ? Z : (bool?)null; }
    }
    private bool ShouldSerializeZ() { return ZSpecified; }
    private void ResetZ() { ZSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/position.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/math/coordinates.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"PositionData")]
  public partial class PositionData : global::ProtoBuf.IExtensible
  {
    public PositionData() {}
    

    private float? _timestamp;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"timestamp", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float Timestamp
    {
      get { return _timestamp?? default(float); }
      set { _timestamp = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool TimestampSpecified
    {
      get { return _timestamp != null; }
      set { if (value == (_timestamp== null)) _timestamp = value ? Timestamp : (float?)null; }
    }
    private bool ShouldSerializeTimestamp() { return TimestampSpecified; }
    private void ResetTimestamp() { TimestampSpecified = false; }
    

    private Schema.Improbable.Math.Coordinates _value = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"value", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Coordinates Value
    {
      get { return _value; }
      set { _value = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/rigidbody_data.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/math/vector3d.proto
// Note: requires additional types generated from: improbable/entity/physical/freeze_constraints.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Impulse")]
  public partial class Impulse : global::ProtoBuf.IExtensible
  {
    public Impulse() {}
    

    private Schema.Improbable.Math.Vector3d _value = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"value", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Value
    {
      get { return _value; }
      set { _value = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"SetVelocity")]
  public partial class SetVelocity : global::ProtoBuf.IExtensible
  {
    public SetVelocity() {}
    

    private Schema.Improbable.Math.Vector3d _value = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"value", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Value
    {
      get { return _value; }
      set { _value = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"RigidbodyDataData")]
  public partial class RigidbodyDataData : global::ProtoBuf.IExtensible
  {
    public RigidbodyDataData() {}
    

    private float? _mass;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"mass", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float Mass
    {
      get { return _mass?? default(float); }
      set { _mass = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool MassSpecified
    {
      get { return _mass != null; }
      set { if (value == (_mass== null)) _mass = value ? Mass : (float?)null; }
    }
    private bool ShouldSerializeMass() { return MassSpecified; }
    private void ResetMass() { MassSpecified = false; }
    

    private Schema.Improbable.Math.Vector3d _force = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"force", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Force
    {
      get { return _force; }
      set { _force = value; }
    }

    private Schema.Improbable.Math.Vector3d _torque = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"torque", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Torque
    {
      get { return _torque; }
      set { _torque = value; }
    }

    private float? _drag;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"drag", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float Drag
    {
      get { return _drag?? default(float); }
      set { _drag = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool DragSpecified
    {
      get { return _drag != null; }
      set { if (value == (_drag== null)) _drag = value ? Drag : (float?)null; }
    }
    private bool ShouldSerializeDrag() { return DragSpecified; }
    private void ResetDrag() { DragSpecified = false; }
    

    private float? _angularDrag;
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"angularDrag", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float AngularDrag
    {
      get { return _angularDrag?? default(float); }
      set { _angularDrag = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool AngularDragSpecified
    {
      get { return _angularDrag != null; }
      set { if (value == (_angularDrag== null)) _angularDrag = value ? AngularDrag : (float?)null; }
    }
    private bool ShouldSerializeAngularDrag() { return AngularDragSpecified; }
    private void ResetAngularDrag() { AngularDragSpecified = false; }
    

    private Schema.Improbable.Entity.Physical.FreezeConstraints _freezePosition = null;
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"freeze_position", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Entity.Physical.FreezeConstraints FreezePosition
    {
      get { return _freezePosition; }
      set { _freezePosition = value; }
    }

    private Schema.Improbable.Entity.Physical.FreezeConstraints _freezeRotation = null;
    [global::ProtoBuf.ProtoMember(7, IsRequired = false, Name=@"freeze_rotation", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Entity.Physical.FreezeConstraints FreezeRotation
    {
      get { return _freezeRotation; }
      set { _freezeRotation = value; }
    }

    private bool? _useGravity;
    [global::ProtoBuf.ProtoMember(8, IsRequired = false, Name=@"use_gravity", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool UseGravity
    {
      get { return _useGravity?? default(bool); }
      set { _useGravity = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool UseGravitySpecified
    {
      get { return _useGravity != null; }
      set { if (value == (_useGravity== null)) _useGravity = value ? UseGravity : (bool?)null; }
    }
    private bool ShouldSerializeUseGravity() { return UseGravitySpecified; }
    private void ResetUseGravity() { UseGravitySpecified = false; }
    

    private bool? _isKinematic;
    [global::ProtoBuf.ProtoMember(9, IsRequired = false, Name=@"is_kinematic", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool IsKinematic
    {
      get { return _isKinematic?? default(bool); }
      set { _isKinematic = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool IsKinematicSpecified
    {
      get { return _isKinematic != null; }
      set { if (value == (_isKinematic== null)) _isKinematic = value ? IsKinematic : (bool?)null; }
    }
    private bool ShouldSerializeIsKinematic() { return IsKinematicSpecified; }
    private void ResetIsKinematic() { IsKinematicSpecified = false; }
    

    private Schema.Improbable.Entity.Physical.RigidbodyDataData.InterpolationMode? _interpolation;
    [global::ProtoBuf.ProtoMember(10, IsRequired = false, Name=@"interpolation", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public Schema.Improbable.Entity.Physical.RigidbodyDataData.InterpolationMode Interpolation
    {
      get { return _interpolation?? Schema.Improbable.Entity.Physical.RigidbodyDataData.InterpolationMode.None; }
      set { _interpolation = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool InterpolationSpecified
    {
      get { return _interpolation != null; }
      set { if (value == (_interpolation== null)) _interpolation = value ? Interpolation : (Schema.Improbable.Entity.Physical.RigidbodyDataData.InterpolationMode?)null; }
    }
    private bool ShouldSerializeInterpolation() { return InterpolationSpecified; }
    private void ResetInterpolation() { InterpolationSpecified = false; }
    

    private Schema.Improbable.Entity.Physical.RigidbodyDataData.CollisionDetectionMode? _collisionDetection;
    [global::ProtoBuf.ProtoMember(11, IsRequired = false, Name=@"collision_detection", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public Schema.Improbable.Entity.Physical.RigidbodyDataData.CollisionDetectionMode CollisionDetection
    {
      get { return _collisionDetection?? Schema.Improbable.Entity.Physical.RigidbodyDataData.CollisionDetectionMode.Discrete; }
      set { _collisionDetection = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool CollisionDetectionSpecified
    {
      get { return _collisionDetection != null; }
      set { if (value == (_collisionDetection== null)) _collisionDetection = value ? CollisionDetection : (Schema.Improbable.Entity.Physical.RigidbodyDataData.CollisionDetectionMode?)null; }
    }
    private bool ShouldSerializeCollisionDetection() { return CollisionDetectionSpecified; }
    private void ResetCollisionDetection() { CollisionDetectionSpecified = false; }
    
    private readonly global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.Impulse> _impulse = new global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.Impulse>();
    [global::ProtoBuf.ProtoMember(1000, Name=@"impulse", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.Impulse> Impulse
    {
      get { return _impulse; }
    }
  
    private readonly global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.SetVelocity> _setVelocity = new global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.SetVelocity>();
    [global::ProtoBuf.ProtoMember(1001, Name=@"setVelocity", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.SetVelocity> SetVelocity
    {
      get { return _setVelocity; }
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"CollisionDetectionMode")]
    public enum CollisionDetectionMode
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"Discrete", Value=0)]
      Discrete = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Continuous", Value=1)]
      Continuous = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"ContinuousDynamic", Value=2)]
      ContinuousDynamic = 2
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"InterpolationMode")]
    public enum InterpolationMode
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"None", Value=0)]
      None = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Interpolate", Value=1)]
      Interpolate = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Extrapolate", Value=2)]
      Extrapolate = 2
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/rigidbody_engine_data.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/math/vector3d.proto
// Note: requires additional types generated from: improbable/math/coordinates.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"RigidbodyEngineDataData")]
  public partial class RigidbodyEngineDataData : global::ProtoBuf.IExtensible
  {
    public RigidbodyEngineDataData() {}
    

    private Schema.Improbable.Math.Vector3d _velocity = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"velocity", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Velocity
    {
      get { return _velocity; }
      set { _velocity = value; }
    }

    private Schema.Improbable.Math.Vector3d _angularVelocity = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"angular_velocity", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d AngularVelocity
    {
      get { return _angularVelocity; }
      set { _angularVelocity = value; }
    }

    private Schema.Improbable.Math.Vector3d _relativeCentreOfMass = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"relative_centre_of_mass", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d RelativeCentreOfMass
    {
      get { return _relativeCentreOfMass; }
      set { _relativeCentreOfMass = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/rotation.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/math/vector3d.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"RotationData")]
  public partial class RotationData : global::ProtoBuf.IExtensible
  {
    public RotationData() {}
    

    private float? _timestamp;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"timestamp", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float Timestamp
    {
      get { return _timestamp?? default(float); }
      set { _timestamp = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool TimestampSpecified
    {
      get { return _timestamp != null; }
      set { if (value == (_timestamp== null)) _timestamp = value ? Timestamp : (float?)null; }
    }
    private bool ShouldSerializeTimestamp() { return TimestampSpecified; }
    private void ResetTimestamp() { TimestampSpecified = false; }
    

    private Schema.Improbable.Math.Vector3d _euler = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"euler", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Euler
    {
      get { return _euler; }
      set { _euler = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/target_rotation.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/math/vector3d.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TargetRotationData")]
  public partial class TargetRotationData : global::ProtoBuf.IExtensible
  {
    public TargetRotationData() {}
    

    private Schema.Improbable.Math.Vector3d _euler = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"euler", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Euler
    {
      get { return _euler; }
      set { _euler = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/teleport_ack.proto
// Note: requires additional types generated from: improbable/entity_state.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TeleportAckData")]
  public partial class TeleportAckData : global::ProtoBuf.IExtensible
  {
    public TeleportAckData() {}
    

    private int? _lastExecutedRequestId;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"last_executed_request_id", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int LastExecutedRequestId
    {
      get { return _lastExecutedRequestId?? default(int); }
      set { _lastExecutedRequestId = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool LastExecutedRequestIdSpecified
    {
      get { return _lastExecutedRequestId != null; }
      set { if (value == (_lastExecutedRequestId== null)) _lastExecutedRequestId = value ? LastExecutedRequestId : (int?)null; }
    }
    private bool ShouldSerializeLastExecutedRequestId() { return LastExecutedRequestIdSpecified; }
    private void ResetLastExecutedRequestId() { LastExecutedRequestIdSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/teleport_request.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/math/coordinates.proto
// Note: requires additional types generated from: improbable/math/vector3d.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TeleportRequestData")]
  public partial class TeleportRequestData : global::ProtoBuf.IExtensible
  {
    public TeleportRequestData() {}
    

    private int? _requestId;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"request_id", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int RequestId
    {
      get { return _requestId?? default(int); }
      set { _requestId = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool RequestIdSpecified
    {
      get { return _requestId != null; }
      set { if (value == (_requestId== null)) _requestId = value ? RequestId : (int?)null; }
    }
    private bool ShouldSerializeRequestId() { return RequestIdSpecified; }
    private void ResetRequestId() { RequestIdSpecified = false; }
    

    private Schema.Improbable.Math.Coordinates _position = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"position", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Coordinates Position
    {
      get { return _position; }
      set { _position = value; }
    }

    private Schema.Improbable.Math.Vector3d _euler = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"euler", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Euler
    {
      get { return _euler; }
      set { _euler = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}