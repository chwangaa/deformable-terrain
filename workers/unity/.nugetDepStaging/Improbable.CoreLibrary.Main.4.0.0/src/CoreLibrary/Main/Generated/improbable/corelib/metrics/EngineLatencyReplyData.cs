// Generated by ProtocGenFabric. DO NOT EDIT!
// source: schema.improbable.corelib.metrics.EngineLatencyReplyData in improbable/corelib/metrics/engine_latency_reply.proto.

namespace Improbable.Corelib.Metrics
{
public struct EngineLatencyReplyData : global::System.IEquatable<EngineLatencyReplyData>
{


    public override bool Equals(object obj)
    {
        if (!(obj is EngineLatencyReplyData))
            return false;
        return Equals((EngineLatencyReplyData) obj);
    }

    public static bool operator ==(EngineLatencyReplyData obj1, EngineLatencyReplyData obj2)
    {
        return obj1.Equals(obj2);
    }

    public static bool operator !=(EngineLatencyReplyData obj1, EngineLatencyReplyData obj2)
    {
        return !obj1.Equals(obj2);
    }

    public bool Equals(EngineLatencyReplyData obj)
    {
        return true;
    }

    public override int GetHashCode()
    {
        int res = 1327;
        return res;
    }
}

//For internal use only, not to be used in user code.
public sealed class EngineLatencyReplyDataHelper : global::Improbable.Tools.IProtoConverter<Improbable.Corelib.Metrics.EngineLatencyReplyData, Schema.Improbable.Corelib.Metrics.EngineLatencyReplyData>
{
    static readonly EngineLatencyReplyDataHelper _instance = new EngineLatencyReplyDataHelper();
    public static EngineLatencyReplyDataHelper Instance { get { return _instance; } }
    private EngineLatencyReplyDataHelper() {}

    public Schema.Improbable.Corelib.Metrics.EngineLatencyReplyData ToProto(Improbable.Corelib.Metrics.EngineLatencyReplyData data)
    {
        var proto = new Schema.Improbable.Corelib.Metrics.EngineLatencyReplyData();
        return proto;
    }

    //Shallow merge method
    public Improbable.Corelib.Metrics.EngineLatencyReplyData MergeFromProto(Schema.Improbable.Corelib.Metrics.EngineLatencyReplyData proto, bool[] statesToClear, Improbable.Corelib.Metrics.EngineLatencyReplyData data)
    {
        return new Improbable.Corelib.Metrics.EngineLatencyReplyData(

        );
    }

    public Improbable.Corelib.Metrics.EngineLatencyReplyData FromProto(Schema.Improbable.Corelib.Metrics.EngineLatencyReplyData proto)
    {
        return new Improbable.Corelib.Metrics.EngineLatencyReplyData(

        );
    }

    //Shallow merge method
    public void MergeProto(Schema.Improbable.Corelib.Metrics.EngineLatencyReplyData protoFrom, bool[] statesToClearFrom, Schema.Improbable.Corelib.Metrics.EngineLatencyReplyData protoTo, bool[] statesToClearTo)
    {
        protoTo.EnginePingReceived.AddRange(protoFrom.EnginePingReceived);
    }
}
}
